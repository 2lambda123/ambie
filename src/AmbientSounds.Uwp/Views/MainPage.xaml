<Page
    x:Class="AmbientSounds.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ani="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:AmbientSounds.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:viewmodels="using:AmbientSounds.ViewModels"
    NavigationCacheMode="Enabled"
    PointerEntered="{x:Bind ViewModel.ResetTime}"
    PointerMoved="{x:Bind ViewModel.ResetTime}"
    PointerPressed="{x:Bind ViewModel.ResetTime}"
    PointerReleased="{x:Bind ViewModel.ResetTime}"
    PreviewKeyDown="{x:Bind ViewModel.ResetTime}"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="NarrowSoundTemplate" x:DataType="viewmodels:SoundViewModel">
            <Grid Padding="8" CornerRadius="4">
                <Grid.Background>
                    <SolidColorBrush Color="{x:Bind controls:UIHelper.ToColour(ColourHue), Mode=OneWay}" />
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ani:Implicit.ShowAnimations>
                    <ani:OpacityAnimation
                        Delay="0:0:0.5"
                        From="0"
                        To="1"
                        Duration="0:0:1" />
                </ani:Implicit.ShowAnimations>

                <Button Command="{x:Bind PlayCommand}" Style="{StaticResource TransparentRoundButtonStyle}">
                    <FontIcon
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        Foreground="White"
                        Glyph="&#xEB21;" />
                </Button>

                <TextBlock
                    Grid.Column="1"
                    Margin="12,0,12,0"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Text="{x:Bind Name}"
                    TextTrimming="CharacterEllipsis" />

                <Grid
                    Grid.Column="2"
                    Margin="0,0,8,0"
                    Visibility="{x:Bind IsCurrentlyPlaying, Mode=OneWay}">
                    <FontIcon
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        Foreground="White"
                        Glyph="&#xEB7D;" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="MainPageSoundTemplate" x:DataType="viewmodels:SoundViewModel">
            <!--  todo need to reimplement automation name and item status.  -->
            <Grid x:Name="Root">
                <ani:Implicit.ShowAnimations>
                    <ani:OpacityAnimation
                        Delay="0:0:0.5"
                        From="0"
                        To="1"
                        Duration="0:0:1" />
                </ani:Implicit.ShowAnimations>

                <toolkit:DropShadowPanel HorizontalAlignment="Center" Style="{StaticResource SubtleShadow}">
                    <Rectangle
                        Width="168"
                        Height="240"
                        Fill="Black"
                        RadiusX="8"
                        RadiusY="8"
                        Stretch="Fill" />
                </toolkit:DropShadowPanel>

                <Grid
                    Width="172"
                    Height="240"
                    CornerRadius="8"
                    PointerEntered="{x:Bind controls:UIHelper.ScaleUpChildImage}"
                    PointerExited="{x:Bind controls:UIHelper.ScaleNormalChildImage}"
                    PointerPressed="{x:Bind controls:UIHelper.ScaleNormalChildImage}"
                    PointerReleased="{x:Bind controls:UIHelper.ScaleUpChildImage}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{x:Bind PlayCommand}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>



                    <Grid x:Name="ImageGrid" ui:VisualExtensions.NormalizedCenterPoint="0.5">
                        <ani:Implicit.Animations>
                            <ani:ScaleAnimation Duration="0:0:0.5" />
                        </ani:Implicit.Animations>

                        <Grid>
                            <Grid.Background>
                                <ImageBrush Stretch="UniformToFill">
                                    <ImageBrush.ImageSource>
                                        <BitmapImage
                                            DecodePixelHeight="240"
                                            DecodePixelType="Logical"
                                            UriSource="{x:Bind ImagePath}" />
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Grid.Background>
                        </Grid>

                        <Grid x:Name="Image2" x:Load="{x:Bind HasSecondImage, Mode=OneWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Image Grid.Row="1" Stretch="UniformToFill">
                                <Image.Source>
                                    <BitmapImage DecodePixelHeight="120" UriSource="{x:Bind SecondImagePath, Mode=OneWay}" />
                                </Image.Source>
                            </Image>
                        </Grid>

                        <Grid x:Name="Image3" x:Load="{x:Bind HasThirdImage, Mode=OneWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Image Grid.Row="1" Stretch="UniformToFill">
                                <Image.Source>
                                    <BitmapImage
                                        DecodePixelHeight="80"
                                        DecodePixelType="Logical"
                                        UriSource="{x:Bind SecondImagePath, Mode=OneWay}" />
                                </Image.Source>
                            </Image>
                            <Image Grid.Row="2" Stretch="UniformToFill">
                                <Image.Source>
                                    <BitmapImage
                                        DecodePixelHeight="80"
                                        DecodePixelType="Logical"
                                        UriSource="{x:Bind ThirdImagePath, Mode=OneWay}" />
                                </Image.Source>
                            </Image>
                        </Grid>
                    </Grid>

                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#00000000" />
                                <GradientStop Offset="1" Color="{x:Bind controls:UIHelper.ToColour(ColourHue), Mode=OneWay}" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>


                    <Grid
                        Margin="0,0,0,20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{StaticResource BackgroundAcrylicBrush}"
                        CornerRadius="30"
                        Visibility="{x:Bind IsCurrentlyPlaying, Mode=OneWay}">
                        <FontIcon
                            Margin="8"
                            FontFamily="{StaticResource FluentUIGlyphs}"
                            FontSize="28"
                            Foreground="White"
                            Glyph="&#xEB7D;" />
                    </Grid>


                    <Grid Margin="12" VerticalAlignment="Bottom">
                        <TextBlock
                            Foreground="White"
                            Text="{x:Bind Name, Mode=OneWay}"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap">
                            <ToolTipService.ToolTip>
                                <Grid MaxWidth="300">
                                    <TextBlock Text="{x:Bind Attribution, Mode=OneWay}" TextWrapping="Wrap" />
                                </Grid>
                            </ToolTipService.ToolTip>
                        </TextBlock>
                    </Grid>

                    <Grid.ContextFlyout>
                        <muxc:CommandBarFlyout Placement="BottomEdgeAlignedLeft">
                            <muxc:CommandBarFlyout.SecondaryCommands>
                                <AppBarButton
                                    x:Uid="DeleteAppBarButton"
                                    Command="{x:Bind DeleteCommand}"
                                    Icon="Delete"
                                    Visibility="{x:Bind CanDelete, Mode=OneWay}" />
                                <AppBarButton
                                    x:Uid="RenameAppBarButton"
                                    Command="{x:Bind RenameCommand}"
                                    Icon="Rename"
                                    Visibility="{x:Bind IsMix, Mode=OneWay}" />
                                <AppBarElementContainer Visibility="{x:Bind IsNotMix, Mode=OneWay}">
                                    <StackPanel Width="300" Margin="12">
                                        <TextBlock x:Uid="Copyright" FontWeight="SemiBold" />
                                        <TextBlock
                                            Margin="0,8,0,0"
                                            IsTextSelectionEnabled="True"
                                            Text="{x:Bind Attribution, Mode=OneWay}"
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </AppBarElementContainer>
                            </muxc:CommandBarFlyout.SecondaryCommands>
                        </muxc:CommandBarFlyout>
                    </Grid.ContextFlyout>
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid RowSpacing="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Padding="40,32,40,0">
            <Grid HorizontalAlignment="Left">
                <Rectangle
                    Height="40"
                    HorizontalAlignment="Stretch"
                    Fill="{ThemeResource CardBackgroundBrush}"
                    RadiusX="20"
                    RadiusY="20" />
                <StackPanel Orientation="Horizontal">
                    <Grid
                        x:Name="HomeBackplate"
                        Height="48"
                        Padding="20,0"
                        Background="{ThemeResource FallbackBackgroundOppositeBrush}"
                        CornerRadius="24">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontWeight="SemiBold"
                            Foreground="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                            Text="{x:Bind strings:Resources.Home}" />
                    </Grid>
                    <Button
                        Height="40"
                        Margin="4,0,0,0"
                        Padding="12,0"
                        AutomationProperties.Name="{x:Bind strings:Resources.Catalogue}"
                        Background="Transparent"
                        Click="{x:Bind GoToCatalogue}"
                        Content="{x:Bind strings:Resources.Catalogue}"
                        CornerRadius="20" />
                </StackPanel>
            </Grid>

            <StackPanel
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                ui:VisualExtensions.NormalizedCenterPoint="0.5"
                Orientation="Horizontal">
                <controls:SleepTimerControl />
                <controls:ToggleCompactButton Margin="4,0,0,0" Visibility="{x:Bind IsNotTenFoot}" />
                <controls:MoreButton Margin="4,0,0,0" />
                <controls:AccountControl Margin="4,0,0,0" />

                <ani:Implicit.ShowAnimations>
                    <ani:ScaleAnimation
                        Delay="0:0:0.1"
                        From="0.90"
                        To="1"
                        Duration="0:0:0.5" />
                    <ani:OpacityAnimation
                        Delay="0:0:0.1"
                        From="0"
                        To="1"
                        Duration="0:0:0.3" />
                </ani:Implicit.ShowAnimations>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Padding="40,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <controls:ActiveTrackList
                x:Name="TrackList"
                Grid.Column="1"
                VerticalAlignment="Top"
                ShowList="False" />

            <controls:SoundGridControl
                x:Name="SoundGallery"
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,12,0,0"
                ItemTemplate="{StaticResource NarrowSoundTemplate}"
                Layout="{StaticResource VerticalStackLayout}" />
        </Grid>

        <muxc:TeachingTip
            x:Name="PinTeachingTip"
            Title="{x:Bind strings:Resources.HelloAndWelcome}"
            ActionButtonClick="PinTeachingTip_ActionButtonClick"
            ActionButtonContent="{x:Bind strings:Resources.PinToTaskbar}"
            CloseButtonContent="{x:Bind strings:Resources.Dismiss}"
            PreferredPlacement="BottomRight"
            Subtitle="{x:Bind strings:Resources.FirstLaunchMessage}" />


        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="NarrowLayout" />
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="670" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SoundGallery.(Grid.Column)" Value="1" />
                        <Setter Target="SoundGallery.Margin" Value="12,0,0,0" />
                        <Setter Target="SoundGallery.ItemTemplate" Value="{StaticResource MainPageSoundTemplate}" />
                        <Setter Target="SoundGallery.Layout" Value="{StaticResource UniformGridLayout}" />
                        <Setter Target="TrackList.(Grid.Row)" Value="1" />
                        <Setter Target="TrackList.(Grid.Column)" Value="0" />
                        <Setter Target="TrackList.ShowList" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
